# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type StateModel {
  id: ID!
  name: StateNames!
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean!
}

enum StateNames {
  Maharashtra
  Bihar
  Chhattisgarh
  Karnataka
  Manipur
  Arunachal_Pradesh
  Assam
  Gujarat
  Punjab
  Mizoram
  Andhra_Pradesh
  West_Bengal
  Goa
  Haryana
  Himachal_Pradesh
  Kerala
  Rajasthan
  Jharkhand
  Madhya_Pradesh
  Odisha
  Nagaland
  TamilNadu
  Uttar_Pradesh
  Telangana
  Meghalaya
  Sikkim
  Tripura
  Uttarakhand
  Jammu_and_Kashmir
  Delhi
  Lakshadweep
  Puducherry
  Ladakh
  Chandigarh
  Andaman_and_Nicobar_Islands
  Dadra_and_Nagar_Haveli_and_Daman_and_Diu
  PAN_INDIA
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type LocationModel {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean!
  stateId: String
  state: StateModel
}

type SellerModel {
  id: ID!
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean!
}

type VehicleCategoryModel {
  id: String!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  isDeleted: Boolean!
}

type EventModel {
  id: String!
  eventNo: Float!
  eventCategory: EventCategory!
  startDate: DateTime!
  endDate: DateTime!
  firstVehicleEndDate: DateTime
  sellerId: String
  seller: SellerModel
  vehicleCategoryId: String
  vehicleCategory: VehicleCategoryModel
  locationId: String
  location: LocationModel
  noOfBids: Float
  status: EventStatusType
  currentStatus: EventCurrentStatus
  downloadableFile_filename: String
  termsAndConditions: String
  createdAt: DateTime
  updatedAt: DateTime
  bidLock: EventBidLockType
  extraTimeTrigerIn: Float
  extraTime: Float
  vehicleLiveTimeIn: Float
  gapInBetweenVehicles: Float
  vehiclesCount: Float
  isDeleted: Boolean!
}

enum EventCategory {
  TwoWheeler
  threeWheeler
  fourWheeler
}

enum EventStatusType {
  active
  inactive
}

enum EventCurrentStatus {
  pending
  ongoing
  completed
}

enum EventBidLockType {
  unlocked
  locked
}

type VehicleModel {
  id: String!
  vehicleIndexNo: Float!
  registrationNumber: String!
  bidTimeExpire: DateTime!
  bidStartTime: DateTime!
  eventId: String
  event: EventModel
  loanAgreementNo: String!
  registeredOwnerName: String
  quoteIncreament: Float
  make: String
  model: String
  varient: String
  category: String
  fuel: String
  type: String
  rcStatus: String
  YOM: Float
  ownership: Float
  mileage: Float
  kmReading: Float
  insuranceStatus: String
  yardLocation: String
  startPrice: Float
  reservePrice: Float
  repoDt: String
  veicleLocation: String
  vehicleRemarks: String
  auctionManager: String
  parkingCharges: String
  insurance: String
  insuranceValidTill: String
  tax: String
  taxValidityDate: String
  fitness: String
  permit: String
  engineNo: String
  chassisNo: String
  image: String
  inspectionLink: String
  autobseContact: String
  autobse_contact_person: String
  vehicleCondition: String
  powerSteering: String
  shape: String
  color: String
  state: String
  city: String
  area: String
  paymentTerms: String
  dateOfRegistration: String
  hypothication: String
  climateControl: String
  doorCount: Float
  gearBox: String
  buyerFees: String
  rtoFine: String
  parkingRate: String
  approxParkingCharges: String
  clientContactPerson: String
  clientContactNo: String
  additionalRemarks: String
  lotNumber: Float
  createdAt: DateTime
  updatedAt: DateTime
  isDeleted: Boolean!
  address: String
  pincode: String
  yardName: String
  yardState: String
}

type Query {
  liststate: [StateModel!]!
  listlocation: [LocationModel!]!
  listUnique(where: locationwhereInput!): LocationModel!
  listAllSeller: [SellerModel!]!
  listVehicleCategory: [VehicleCategoryModel!]!
  listevents: [EventModel!]!
  Searchvehicle(keyword: String!): [VehicleModel!]!
}

input locationwhereInput {
  stateId: String
  id: String
}

type Mutation {
  CreateState(data: CreateStateInput!): StateModel!
  createlocation(data: CreateLocationInput!, where: locationwhereInput!): LocationModel!
  updatelocation(data: locationUpdateInput!, where: locationwhereInput!): LocationModel!
  deleteLocation(where: locationwhereInput!): LocationModel!
  CreateSeller(data: CreateSellerInput!): SellerModel!
  CreateVehicleCategory(data: CreateVehicleCategoryInput!): VehicleCategoryModel!
  CreateEvent(data: CreateEventInput!, where: eventwhereInput!): EventModel!
  createVehicle(data: CreateVehicleInput!): VehicleModel!
}

input CreateStateInput {
  name: StateNames!
}

input CreateLocationInput {
  name: String!
}

input locationUpdateInput {
  name: String!
  isDeleted: Boolean!
}

input CreateSellerInput {
  name: String!
  contactPerson: String!
  GSTNumber: String!
  billingContactPerson: String!
  mobile: String!
}

input CreateVehicleCategoryInput {
  name: String!
}

input CreateEventInput {
  eventCategory: EventCategory!
  startDate: DateTime!
  endDate: DateTime!
  firstVehicleEndDate: DateTime
  noOfBids: Float
  status: EventStatusType
  currentStatus: EventCurrentStatus
  bidLock: EventBidLockType
}

input eventwhereInput {
  sellerId: String
  vehicleCategoryId: String
  locationId: String
}

input CreateVehicleInput {
  registrationNumber: String!
  loanAgreementNo: String!
  registeredOwnerName: String!
  eventId: String!
  bidTimeExpire: DateTime!
  bidStartTime: DateTime!
}